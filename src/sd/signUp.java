/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sd;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Adnan & Arman
 */
public class signUp extends javax.swing.JFrame {

    /**
     * Creates new form signUp
     */
    
    // screen height width
    int wid = (Toolkit.getDefaultToolkit().getScreenSize().width)/2-200;
    int hit = (Toolkit.getDefaultToolkit().getScreenSize().height)/2-300;
    
    // drag
    int X;
    int Y;
    
    // image path
    String imagepath;
    
    public signUp(int x,int y) {
        initComponents();
        
        //icon image
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconMini.png")));
        
        // opaque error
        name_.setBackground(new java.awt.Color(255,255,255,0));
        mail_.setBackground(new java.awt.Color(255,255,255,0));
        pass_.setBackground(new java.awt.Color(255,255,255,0));
        conPass_.setBackground(new java.awt.Color(255,255,255,0));
        userID_.setBackground(new java.awt.Color(255,255,255,0));
        
        //position
        this.setLocation(wid, hit);
        
        // back pos
        X=x;
        Y=y;
    }
    public signUp() {
        initComponents();
        
        //icon image
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("iconMini.png")));
        
        // opaque error
        name_.setBackground(new java.awt.Color(255,255,255,0));
        mail_.setBackground(new java.awt.Color(255,255,255,0));
        pass_.setBackground(new java.awt.Color(255,255,255,0));
        conPass_.setBackground(new java.awt.Color(255,255,255,0));
        userID_.setBackground(new java.awt.Color(255,255,255,0));
        
        //position
        this.setLocation(wid, hit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name_ = new javax.swing.JTextField();
        userID_ = new javax.swing.JTextField();
        doctor_ = new javax.swing.JRadioButton();
        showDOB_ = new javax.swing.JLabel();
        engineer_ = new javax.swing.JRadioButton();
        general_ = new javax.swing.JRadioButton();
        DOB_ = new com.toedter.calendar.JDateChooser();
        img_ = new javax.swing.JLabel();
        imgShow_ = new javax.swing.JLabel();
        imgPath_ = new javax.swing.JLabel();
        mail_ = new javax.swing.JTextField();
        pass_ = new javax.swing.JTextField();
        conPass_ = new javax.swing.JTextField();
        ok_ = new javax.swing.JLabel();
        backToLogin_ = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        drag_ = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        name_.setForeground(new java.awt.Color(255, 255, 255));
        name_.setToolTipText("");
        name_.setBorder(null);
        name_.setOpaque(false);
        getContentPane().add(name_, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 292, 304, 20));

        userID_.setForeground(new java.awt.Color(255, 255, 255));
        userID_.setBorder(null);
        userID_.setOpaque(false);
        getContentPane().add(userID_, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 384, 295, 20));

        doctor_.setForeground(new java.awt.Color(255, 255, 255));
        doctor_.setSelected(true);
        doctor_.setText("doctor");
        doctor_.setOpaque(false);
        doctor_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_ActionPerformed(evt);
            }
        });
        getContentPane().add(doctor_, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 70, 20));

        showDOB_.setForeground(new java.awt.Color(255, 255, 255));
        showDOB_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(showDOB_, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 322, 150, 15));

        engineer_.setForeground(new java.awt.Color(255, 255, 255));
        engineer_.setText("engineer");
        engineer_.setOpaque(false);
        engineer_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                engineer_ActionPerformed(evt);
            }
        });
        getContentPane().add(engineer_, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 80, 20));

        general_.setForeground(new java.awt.Color(255, 255, 255));
        general_.setText("general");
        general_.setOpaque(false);
        general_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                general_ActionPerformed(evt);
            }
        });
        getContentPane().add(general_, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 80, 20));

        DOB_.setBackground(new java.awt.Color(255, 255, 255));
        DOB_.setOpaque(false);
        DOB_.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                DOB_ComponentAdded(evt);
            }
        });
        DOB_.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                DOB_AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        DOB_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DOB_MouseExited(evt);
            }
        });
        DOB_.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                DOB_InputMethodTextChanged(evt);
            }
        });
        getContentPane().add(DOB_, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 315, 42, -1));

        img_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        img_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                img_MouseReleased(evt);
            }
        });
        getContentPane().add(img_, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 244, 50, 15));
        getContentPane().add(imgShow_, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 95, 120, 120));

        imgPath_.setForeground(new java.awt.Color(102, 102, 102));
        imgPath_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(imgPath_, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 260, 360, 16));

        mail_.setForeground(new java.awt.Color(255, 255, 255));
        mail_.setBorder(null);
        mail_.setOpaque(false);
        getContentPane().add(mail_, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 411, 301, 20));

        pass_.setForeground(new java.awt.Color(255, 255, 255));
        pass_.setBorder(null);
        pass_.setOpaque(false);
        getContentPane().add(pass_, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 442, 277, 20));

        conPass_.setForeground(new java.awt.Color(255, 255, 255));
        conPass_.setBorder(null);
        conPass_.setOpaque(false);
        getContentPane().add(conPass_, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 473, 207, 20));

        ok_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ok_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ok_MousePressed(evt);
            }
        });
        getContentPane().add(ok_, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 515, 55, 25));

        backToLogin_.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backToLogin_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                backToLogin_MouseReleased(evt);
            }
        });
        getContentPane().add(backToLogin_, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 558, 120, 26));

        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 323, 15, 15));

        drag_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        drag_.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sd/signUp_.png"))); // NOI18N
        getContentPane().add(drag_, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backToLogin_MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToLogin_MouseReleased
        // TODO add your handling code here:
        this.dispose();
        login log = new login(X,Y);
        log.setVisible(true);
    }//GEN-LAST:event_backToLogin_MouseReleased
        String prof = "";
        String dbshw = "";
    private void ok_MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ok_MousePressed
        // TODO add your handling code here:
        String name = name_.getText();
        String username = userID_.getText();
        String pass = pass_.getText();
        String conPass = conPass_.getText();
        String email = mail_.getText();
        String getBackPass = randomStringGen();
        SimpleDateFormat formt = new SimpleDateFormat("dd-MM-yyyy");
        String DOB = formt.format(DOB_.getDate());
        
        
        if(verifyEmptyMismatch()){
            if (!checkUsername(username)){
                PreparedStatement ps;
                ResultSet rs ;
                String regiQuery = "INSERT INTO `users`(`user`, `password`, `fullName`, `email`, `DOB`, `forgotString`, `picture`, `profession`) VALUES (?,?,?,?,?,?,?,?)";
                
                try {
                    ps = JDBC_con.getconnection().prepareStatement(regiQuery);
                    ps.setString(1, username);
                    ps.setString(2, pass);
                    ps.setString(3, name);
                    ps.setString(4, email);
                    ps.setString(5, DOB);
                    ps.setString(6, getBackPass);
                    
                    if (imagepath != null){
                    InputStream img = new FileInputStream(new File(imagepath));
                    ps.setBlob(7, img);
                    }
                    else{
                    ps.setNull(7, java.sql.Types.NULL);
                    }
                    
                    ps.setString(8, prof);
                    
                    if(ps.executeUpdate() != 0){
                        this.dispose();
                        
                        popCongo pop5 = new popCongo(X,Y);
                        pop5.setVisible(true);
                    }
                    else System.out.println("error");
                    
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            
            }
        
        }
    }//GEN-LAST:event_ok_MousePressed

    private void img_MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_img_MouseReleased
        // TODO add your handling code here:
        
        String path;
        JFileChooser imgChoose = new JFileChooser();
        imgChoose.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE","jpg","png","jpeg");
        imgChoose.addChoosableFileFilter(filter);
        
        int res = imgChoose.showSaveDialog(null);
        if(res == JFileChooser.APPROVE_OPTION){
        File f = imgChoose.getSelectedFile();
        path = f.getAbsolutePath();
        
        ImageIcon imgicon = new ImageIcon(new ImageIcon(path).getImage().getScaledInstance(imgShow_.getWidth(), imgShow_.getHeight(), Image.SCALE_SMOOTH));
        imgShow_.setIcon(imgicon);
        imgPath_.setText(path);
        imagepath = path;
        }
        
    }//GEN-LAST:event_img_MouseReleased

    private void DOB_AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_DOB_AncestorAdded
    
    }//GEN-LAST:event_DOB_AncestorAdded

    private void DOB_ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_DOB_ComponentAdded
        
    }//GEN-LAST:event_DOB_ComponentAdded

    private void DOB_MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DOB_MouseExited
        
    }//GEN-LAST:event_DOB_MouseExited

    private void DOB_InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_DOB_InputMethodTextChanged

    }//GEN-LAST:event_DOB_InputMethodTextChanged

    private void doctor_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_ActionPerformed
        if(doctor_.isSelected()){
            engineer_.setSelected(false);
            general_.setSelected(false);
            prof = "doctor";
        }
    }//GEN-LAST:event_doctor_ActionPerformed

    private void engineer_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_engineer_ActionPerformed
        if(engineer_.isSelected()){
            doctor_.setSelected(false);
            general_.setSelected(false);
            prof = "engineer";
        }
    }//GEN-LAST:event_engineer_ActionPerformed

    private void general_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_general_ActionPerformed
        if(general_.isSelected()){
            engineer_.setSelected(false);
            doctor_.setSelected(false);
            prof = "general";
        }
    }//GEN-LAST:event_general_ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        SimpleDateFormat formt = new SimpleDateFormat("dd-MM-yyyy");
        String DOB = formt.format(DOB_.getDate());
        showDOB_.setText(DOB);
    }//GEN-LAST:event_jButton1MouseClicked

    
    public boolean verifyEmptyMismatch(){
    
            String name = name_.getText();
            String userName = userID_.getText();
            String pass = pass_.getText();
            String conPass = conPass_.getText();
            String email = mail_.getText();
            
            // one field empty
            if (name.trim().equals("") || userName.trim().equals("") || email.trim().equals("") ||
                    pass.equals("") || conPass.equals("")){
            
                popLogEmpty pop1 = new popLogEmpty ();
                pop1.setVisible(true);
                return false;
            }
            
                // password mismatch
                else if (!pass.equals(conPass)){
                
                    popMismatch pop2 = new popMismatch();
                    pop2.setVisible(true);         
                    return false;
                }
                
                // invalid mail
                else if (!validMail(email)) {
                       
                        popInvalidMail pop6 = new popInvalidMail();
                        pop6.setVisible(true); 
                        return false;
                    }
                            
            else return true;
    
    }
    
    public boolean checkUsername(String username){
        
            boolean usernameExists = false;
            
            PreparedStatement st;
            ResultSet rs;
            String query = "SELECT * FROM `users` WHERE `user`= ?";    
            
        try {
            st = JDBC_con.getconnection().prepareStatement(query);
            st.setString(1, username);
            rs = st.executeQuery();
            
            if(rs.next()){
                usernameExists = true;
                popUserExists pop3 = new popUserExists();
                pop3.setVisible(true);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(signUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return usernameExists;
    
    }
    
    
    
    public boolean validMail(String mail){
        
        String emailregx = "^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$";
        Pattern emailPat = Pattern.compile(emailregx,Pattern.CASE_INSENSITIVE);
        Matcher matcher = emailPat.matcher(mail);
        
        return matcher.find();
    }
    
    public String randomStringGen(){
        String characters = "qwertyuiopasdfghjklzxcvbnm1243567890ASDFGHJKLPOIUYTREWQZXCVBNM";
        String randomStr=null;
        
        Random rand = new Random();
        int length = rand.nextInt(10);
        char []text = new char[length];
        
        for (int i=0; i<length; i++){
            text[i] = characters.charAt(rand.nextInt(characters.length()));
        }
        
        for (int i=0; i<text.length; i++){
            randomStr += text[i];
        }
        
        return randomStr;
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(signUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new signUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DOB_;
    private javax.swing.JLabel backToLogin_;
    private javax.swing.JTextField conPass_;
    private javax.swing.JRadioButton doctor_;
    private javax.swing.JLabel drag_;
    private javax.swing.JRadioButton engineer_;
    private javax.swing.JRadioButton general_;
    private javax.swing.JLabel imgPath_;
    private javax.swing.JLabel imgShow_;
    private javax.swing.JLabel img_;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField mail_;
    private javax.swing.JTextField name_;
    private javax.swing.JLabel ok_;
    private javax.swing.JTextField pass_;
    private javax.swing.JLabel showDOB_;
    private javax.swing.JTextField userID_;
    // End of variables declaration//GEN-END:variables
}
